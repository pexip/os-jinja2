Source: jinja2
Section: python
Priority: optional
Maintainer: Piotr Ożarowski <piotr@debian.org>
Uploaders:
 Debian Python Team <team+python@tracker.debian.org>,
Build-Depends:
 debhelper-compat (= 12),
 dh-python,
 python3-all,
 python3-babel,
 python3-markupsafe (>= 2.0),
 python3-pallets-sphinx-themes (>= 2.0.2),
 python3-pygments,
 python3-pytest,
 python3-setuptools,
 python3-sphinx,
 python3-sphinx-issues,
Standards-Version: 4.5.0
Homepage: http://jinja.pocoo.org/
Vcs-Git: https://salsa.debian.org/python-team/packages/jinja2.git
Vcs-Browser: https://salsa.debian.org/python-team/packages/jinja2

Package: python-jinja2-doc
Section: doc
Architecture: all
Depends:
 ${misc:Depends},
 ${sphinxdoc:Depends},
Recommends:
 python3-jinja2,
Multi-Arch: foreign
Description: documentation for the Jinja2 Python library
 Jinja2 is a small but fast and easy to use stand-alone template engine
 .
 This package contains the documentation for Jinja2 in HTML and
 reStructuredText formats.

Package: python3-jinja2
Architecture: all
Depends:
 python3-markupsafe (>= 2.0),
 ${misc:Depends},
 ${python3:Depends},
Recommends:
 python3-babel,
 python3-pkg-resources,
Suggests:
 python-jinja2-doc,
Breaks:
 python-jinja2 (<< 2.11.1-1),
Replaces:
 python-jinja2 (<< 2.11.1-1),
Description: small but fast and easy to use stand-alone template engine
 Jinja2 is a template engine written in pure Python. It provides a Django
 inspired non-XML syntax but supports inline expressions and an optional
 sandboxed environment.
 .
 The key-features are:
  * Configurable syntax. If you are generating LaTeX or other formats with
    Jinja2 you can change the delimiters to something that integrates better
    into the LaTeX markup.
  * Fast. While performance is not the primarily target of Jinja2 it’s
    surprisingly fast. The overhead compared to regular Python code was reduced
    to the very minimum.
  * Easy to debug. Jinja2 integrates directly into the Python traceback system
    which allows you to debug Jinja2 templates with regular Python debugging
    helpers.
  * Secure. It’s possible to evaluate untrusted template code if the optional
    sandbox is enabled. This allows Jinja2 to be used as templating language
    for applications where users may modify the template design.
